{{ define "buttons.css" -}}
/* general button styling */
button,
.button {
  /* positioning, size */
  {{ $buttonPadding := 0.5 -}} {{/* 0.5 is kind of a random number, but applied on all button paddings */}}
  padding: calc({{ .css.generalsize }} * {{ $buttonPadding }});
  height: {{ .css.fontsize }};
  min-width: {{ .css.fontsize }};

  text-align: center;

  font-size: inherit;

  transition-duration: {{ .css.animations.transitionDuration }};

  /* unify button styling */
  display: inline;
  float: left;
  outline: none;
  cursor: pointer;

  /* border */
  border-style: solid;
  border-width: {{ .css.borders.width }};
  border-radius: {{ .css.borders.radius }};

  /* default button colors */
  color: hsla({{ .css.colors.buttonColor.hue }}, {{ .css.colors.buttonColor.saturation }}, {{ .css.colors.buttonColor.lightness }}, {{ .css.colors.buttonColor.alpha }});
  background-color: hsla({{ .css.colors.buttonBgColor.hue }}, {{ .css.colors.buttonBgColor.saturation }}, {{ .css.colors.buttonBgColor.lightness }}, {{ .css.colors.buttonBgColor.alpha }});
  border-color: hsla({{ .css.colors.borderColor.hue }}, {{ .css.colors.borderColor.saturation }}, {{ .css.colors.borderColor.lightness }}, {{ .css.colors.borderColor.alpha }});
}

/* button sizes */
button,
.button {
  padding: calc({{ .css.generalsize }} * {{ $buttonPadding }});
  height: {{ .css.fontsize }};
  min-width: {{ .css.fontsize }};
  font-size: {{ .css.fontsize }};
}
button.large,
.button.large {
  padding: calc({{ .css.generalsize }} * {{ .factors.sizes.large }} * {{ $buttonPadding }});
  height: calc({{ .css.fontsize }} * {{ .factors.sizes.large }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.sizes.large }});
  font-size: calc({{ .css.fontsize }} * {{ .factors.sizes.large }});
}
button.big,
.button.big {
  padding: calc({{ .css.generalsize }} * {{ .factors.sizes.big }} * {{ $buttonPadding }});
  height: calc({{ .css.fontsize }} * {{ .factors.sizes.big }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.sizes.big }});
  font-size: calc({{ .css.fontsize }} * {{ .factors.sizes.big }});
}
button.huge,
.button.huge {
  padding: calc({{ .css.generalsize }} * {{ .factors.sizes.huge }} * {{ $buttonPadding }});
  height: calc({{ .css.fontsize }} * {{ .factors.sizes.huge }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.sizes.huge }});
  font-size: calc({{ .css.fontsize }} * {{ .factors.sizes.huge }});
}

/* image button sizes */
button.image,
.button.image {
  padding: 0;
  height: calc({{ .css.fontsize }} + ({{ .css.generalsize }} * {{ $buttonPadding }}));
}
button.large.image,
.button.large.image {
  padding: 0;
  height: calc({{ .css.fontsize }} * {{ .factors.sizes.large }} + ({{ .css.generalsize }} * {{ .factors.sizes.large }} * {{ $buttonPadding }}));
}
button.big.image,
.button.big.image {
  padding: 0;
  height: calc({{ .css.fontsize }} * {{ .factors.sizes.big }} + ({{ .css.generalsize }} * {{ .factors.sizes.big }} * {{ $buttonPadding }}));
}
button.huge.image,
.button.huge.image {
  padding: 0;
  height: calc({{ .css.fontsize }} * {{ .factors.sizes.huge }} + ({{ .css.generalsize }} * {{ .factors.sizes.huge }} * {{ $buttonPadding }}));
}

/* inline button */
button.inline,
.button.inline {
  float: none;
}

/* contains multiple buttons */
.buttons > button,
.buttons > .button {
  margin-left: {{ .css.buttons.padding }};
}
.buttons > button.large,
.buttons > .button.large {
  margin-left: calc({{ .css.buttons.padding }} * {{ .factors.sizes.large }});
}
.buttons > button.big,
.buttons > .button.big {
  margin-left: calc({{ .css.buttons.padding }} * {{ .factors.sizes.big }});
}
.buttons > button.huge,
.buttons > .button.huge {
  margin-left: calc({{ .css.buttons.padding }} * {{ .factors.sizes.huge }});
}
.buttons > button:first-child,
.buttons > .button:first-child {
  margin-left: 0;
}

/* inverted button */
button.inverted,
.button.inverted {
  color: hsla({{ .css.colors.buttonBgColor.hue }}, {{ .css.colors.buttonBgColor.saturation }}, {{ .css.colors.buttonBgColor.lightness }}, {{ .css.colors.buttonBgColor.alpha }});
  background-color: hsla({{ .css.colors.buttonColor.hue }}, {{ .css.colors.buttonColor.saturation }}, {{ .css.colors.buttonColor.lightness }}, {{ .css.colors.buttonColor.alpha }});
}

/* primary button styling */
button.primary,
.primary.button {
  color: hsla({{ .css.colors.primaryColor.hue }},{{ .css.colors.primaryColor.saturation }},{{ .css.colors.primaryColor.lightness }},{{ .css.colors.primaryColor.alpha }});
  background-color: hsla({{ .css.colors.primaryBgColor.hue }},{{ .css.colors.primaryBgColor.saturation }},{{ .css.colors.primaryBgColor.lightness }},{{ .css.colors.primaryBgColor.alpha }});
}

/* hover button styling */
button:hover, button:focus,
.button:hover, .button:focus {
  background-color: hsla({{ .css.colors.buttonBgColor.hue }}, {{ .css.colors.buttonBgColor.saturation }}, {{ addPercentage "-20%" .css.colors.buttonBgColor.lightness }}, {{ .css.colors.buttonBgColor.alpha }});
}
button.inverted:hover, button.inverted:focus,
.button.inverted:hover, .button.inverted:focus {
  background-color: hsla({{ .css.colors.buttonColor.hue }}, {{ .css.colors.buttonColor.saturation }}, {{ addPercentage "20%" .css.colors.buttonColor.lightness }}, {{ .css.colors.buttonColor.alpha }});
}
button.primary:hover, button.primary:focus,
.button.primary:hover, .button.primary:focus {
  background-color: hsla({{ .css.colors.primaryBgColor.hue }}, {{ .css.colors.primaryBgColor.saturation }}, {{ addPercentage "20%" .css.colors.primaryBgColor.lightness }}, {{ .css.colors.primaryBgColor.alpha }});
}
button.primary.inverted:hover, button.primary.inverted:focus,
.button.primary.inverted:hover, .button.primary.inverted:focus {
  background-color: hsla({{ .css.colors.primaryColor.hue }}, {{ .css.colors.primaryColor.saturation }}, {{ addPercentage "20%" .css.colors.primaryColor.lightness }}, {{ .css.colors.primaryColor.alpha }});  
}

/* icon button */
button.icon,
.button.icon {
  height: calc({{ .css.fontsize }} * {{ .factors.icons }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.icons }});
  padding: calc({{ .css.generalsize }} * {{ $buttonPadding }} - ({{ .css.fontsize }} * {{ .factors.icons }} - {{ .css.fontsize}}) / 2);

  /* center contents */
  display: flex;
  justify-content: center;
  align-items: center;
}
button.large.icon,
.button.large.icon {
  height: calc({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.large }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.large }});
  padding: calc({{ .css.generalsize }} * {{ .factors.sizes.large }} * {{ $buttonPadding }} - ({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.large }} - {{ .css.fontsize}} * {{ .factors.sizes.large }}) / 2);
}
button.big.icon,
.button.big.icon {
  height: calc({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.big }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.big }});
  padding: calc({{ .css.generalsize }} * {{ .factors.sizes.big }} * {{ $buttonPadding }} - ({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.big }} - {{ .css.fontsize}} * {{ .factors.sizes.big }}) / 2);
}
button.huge.icon,
.button.huge.icon {
  height: calc({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.huge }});
  min-width: calc({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.huge }});
  padding: calc({{ .css.generalsize }} * {{ .factors.sizes.huge }} * {{ $buttonPadding }} - ({{ .css.fontsize }} * {{ .factors.icons }} * {{ .factors.sizes.huge }} - {{ .css.fontsize}} * {{ .factors.sizes.huge }}) / 2);
}
{{- end }}